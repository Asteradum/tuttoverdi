<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="help" name="RehearsalReservationCore">
    <property environment="env"/>
    <property name="source.dir" location="src"/>
    <property name="build.dir" location="bin"/>
    <property name="dist.dir" location="dist"/>
    <property name="codebase.dir" location="bin"/>
    <property name="classpath" location="bin;lib/AuthorizationRMIClient.jar;lib/sqlitejdbc-v056.jar;lib/util_iso2.jar;lib/forms-1.1.0.jar;lib/activemq-all-5.3.0.jar"/>
    <property name="idl.file" location="idl/corbaServer.idl"/>
    <property name="policy.file" location="java.policy"/>
    <property name="nameservice.IP" value="127.0.0.1"/>
    <property name="nameservice.port" value="900"/>
    <property name="rmiregistry.port" value="1099"/>
    <property name="AuthorizationServiceRMI.IP" value="127.0.0.1"/>
    <property name="AuthorizationServiceRMI.port" value="1099"/>
    <property name="AuthorizationServiceRMI.name" value="AuthorizationService"/>
    <property name="ScalaMilanoServer.IP" value="127.0.0.1"/>
    <property name="ScalaMilanoServer.port" value="900"/>
    <property name="ScalaMilanoServer.name" value="ScalaMilano"/>
    <property name="SanCarloNapoliServer.IP" value="127.0.0.1"/>
    <property name="SanCarloNapoliServer.port" value="900"/>
    <property name="SanCarloNapoliServer.name" value="SanCarloNapoli"/>
    <property name="RehearsalReservationServer.IP" value="127.0.0.1"/>
    <property name="RehearsalReservationServer.port" value="1099"/>
    <property name="RehearsalReservationServer.name" value="RehearsalReservationServer"/>
    <property name="axis2.home" value="${env.AXIS2_HOME}"/>
    <property name="activemq.home" value="${env.ACTIVEMQ_HOME}"/>
    <property name="AuthorizationWS.name" value="AuthorizationWS"/>
    <property name="AuthorizationWS.ws.uri" value="http://localhost:8080/axis2/services/${AuthorizationWS.name}"/>
    <property name="AuthorizationWS.wsdl.uri" value="${ws.uri}?wsdl"/>
    <property name="euskaldunaBioWS.name" value="EuskaldunaBio"/>
    <property name="euskaldunaBioWS.ws.uri" value="http://localhost:8080/axis2/services/${euskaldunaBioWS.name}"/>
    <property name="euskaldunaBioWS.wsdl.uri" value="${euskaldunaBioWS.ws.uri}?wsdl"/>
    <path id="classpath">
        <pathelement path="${classpath}"/>
        <fileset dir="${axis2.home}/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${activemq.home}">
            <include name="*.jar"/>
        </fileset>
    </path>
    <target name="help">
        <echo> Usage: ant [idlj | build | tnameserv | ScalaMilanoServer | </echo>
        <echo> SanCarloNapoliServer | RMIClient | rmiregistry | JMSOperaHouseSender | </echo>
        <echo> RehearsalReservationServer | generate.stubs.AuthService | </echo>
        <echo> generate.stubs.EuskaldunaWS | AuthService | clean]</echo>
    </target>
    <target name="idlj" description="Builds IDL file">
        <exec executable="${env.JAVA_HOME}\bin\idlj.exe">
            <arg value="-fall"/>
            <arg value="-td"/>
            <arg value="${source.dir}"/>
            <arg value="${idl.file}"/>
        </exec>
    </target>
    <target name="tnameserv" description="Runs CORBA Name Service">
        <echo message="CORBA Name Service running at port (${nameservice.port})..."/>
        <exec executable="${env.JAVA_HOME}\bin\tnameserv.exe">
            <arg value="-ORBInitialPort"/>
            <arg value="${nameservice.port}"/>
        </exec>
    </target>
    <target name="build" depends="idlj" description="Builds the project">
        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
        <javac debug="true" srcdir="${source.dir}" destdir="${build.dir}" deprecation="true" fork="true">
            <classpath refid="classpath"/>
        </javac>
    </target>
    <target name="ScalaMilanoServer" description="Executes ScalaMilanoServer program">
        <java classname="corbaServer.CorbaOperaHouse" classpath="${classpath}" fork="true">
            <arg value="${ScalaMilanoServer.IP}"/>
            <arg value="${ScalaMilanoServer.port}"/>
            <arg value="${ScalaMilanoServer.name}"/>
        </java>
    </target>
    <target name="SanCarloNapoliServer" description="Executes SanCarloNapoliServer program">
        <java classname="corbaServer.CorbaOperaHouse" classpath="${classpath}" fork="true">
            <arg value="${SanCarloNapoliServer.IP}"/>
            <arg value="${SanCarloNapoliServer.port}"/>
            <arg value="${SanCarloNapoliServer.name}"/>
        </java>
    </target>
    <target name="RMIClient" description="Executes the RMIClient program">
        <java classname="RMIClient.RehearsalController" classpath="${classpath}" fork="true">
            <jvmarg value="-Djava.security.policy=${policy.file}"/>
            <arg value="${RehearsalReservationServer.IP}"/>
            <arg value="${RehearsalReservationServer.port}"/>
            <arg value="${RehearsalReservationServer.name}"/>
        </java>
    </target>
    <target name="rmiregistry" description="Runs RMI Name Service">
        <echo message="RMI Name Service running at port (${rmiregistry.port})..."/>
        <exec executable="${env.JAVA_HOME}\bin\rmiregistry.exe">
            <arg value="${rmiregistry.port}"/>
        </exec>
    </target>
    <target name="JMSOperaHouseSender" description="Runs JMS sender">
        <java classname="JMSOperaHouse.JMSOperaHouseSender" fork="true">
            <classpath refid="classpath"/>
            <arg value="JMSRehearsal"/>
        </java>
    </target>
    <target name="RehearsalReservationServer" description="Executes RehearsalReservationServer program">
        <java classname="rehearsalServer.OperaRehearsalServer" fork="true">
            <classpath refid="classpath"/>
            <jvmarg value="-Djava.rmi.server.codebase=file:${codebase.dir}/ file:lib/util_iso2.jar"/>
            <jvmarg value="-Djava.security.policy=${policy.file}"/>
            <arg value="${AuthorizationServiceRMI.IP}"/>
            <arg value="${AuthorizationServiceRMI.port}"/>
            <arg value="${AuthorizationServiceRMI.name}"/>
            <arg value="${RehearsalReservationServer.IP}"/>
            <arg value="${RehearsalReservationServer.port}"/>
            <arg value="${RehearsalReservationServer.name}"/>
        </java>
    </target>
	<target name="generate.stubs.AuthService">
	        <java classname="org.apache.axis2.wsdl.WSDL2Java" classpathref="classpath">
	            <arg line="-uw"/>
	            <arg line="-uri ${AuthorizationWS.wsdl.uri}"/>
	            <arg line="-ns2p http://authorization=rehearsalServer.loginGateway.proxies"/>
	        </java>
	    </target>
	    <target name="generate.stubs.EuskaldunaWS">
	        <java classname="org.apache.axis2.wsdl.WSDL2Java" classpathref="classpath">
	            <arg line="-uw"/>
	            <arg line="-uri ${euskaldunaBioWS.wsdl.uri}"/>
	            <arg line="-ns2p http://euskaldunaBioWS=rehearsalServer.houseGateway.proxies"/>
	        </java>
	    </target>
    <target name="clean" description="Clean all build products.">
        <delete dir="${build.dir}"/>
        <delete dir="${source.dir}/rehearsalServer/houseGateway/proxies"/>
    	<delete dir="${source.dir}/rehearsalServer/loginGateway/proxies"/>
    	<delete dir="${source.dir}/corbaServer/corba"/>
    	<delete dir="${source.dir}/corbaServer/corba/ICorbaServerPackage"/>
    </target>
    
</project>
